<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Haftalık Plan Çizelgesi - <%= student.name %></title>
    <style>
        @page {
            size: A4;
            margin: 1.5cm;
        }
        
        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            margin: 0;
            padding: 20px;
            line-height: 1.6;
            background: white;
            color: #2c3e50;
        }

        .header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e9ecef;
        }

        .title {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 10px;
            color: #1a73e8;
        }

        .logo-area {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 25px;
        }

        .custom-logo {
            max-width: 250px;
            max-height: 75px;
            width: auto;
            height: auto;
        }

        .logo-placeholder {
            width: 50px;
            height: 25px;
            background: #1a73e8;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 10px;
            border-radius: 4px;
            text-align: center;
        }

        .date {
            text-align: right;
            font-size: 14px;
            color: #5f6368;
        }

        .date-line {
            display: inline-block;
            width: 120px;
            border-bottom: 1px solid #dadce0;
            margin-left: 5px;
        }

        .week-grid {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 10px;
            margin-bottom: 20px;
        }

        /* Notlar günü için özel stil - 2 kutuluk yer kaplar */
        .day-box[data-day="Notlar"] {
            grid-column: span 2;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            height: 220px;
        }

        /* Notlar günü başlığı için özel stil */
        .day-box[data-day="Notlar"] .day-title {
            text-align: center;
            font-size: 16px;
            font-weight: 600;
            color: #1a73e8;
            background: rgba(26, 115, 232, 0.1);
            padding: 3px;
            border-radius: 6px;
            margin-bottom: 15px;
        }

        /* Notlar günü için özel not alanı */
        .day-box[data-day="Notlar"] .notes-area {
            background: white;
            border: 1px solid #dadce0;
            border-radius: 6px;
            padding: 15px;
            min-height: 120px;
            margin-top: 10px;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .day-box[data-day="Notlar"] .notes-area textarea {
            width: 100%;
            height: 100px;
            border: none;
            resize: none;
            font-family: inherit;
            font-size: 12px;
            line-height: 1.4;
            color: #2c3e50;
            background: transparent;
            overflow: hidden;
            scrollbar-width: none; /* Firefox için */
            -ms-overflow-style: none; /* IE ve Edge için */
        }

        /* Webkit tarayıcılar için scroll bar'ı gizle */
        .day-box[data-day="Notlar"] .notes-area textarea::-webkit-scrollbar {
            display: none;
        }

        .day-box[data-day="Notlar"] .notes-area textarea:focus {
            outline: none;
            background: #f8f9fa;
        }



        .day-box {
            border: 1px solid #dadce0;
            border-radius: 8px;
            padding: 15px;
            height: 220px;
            background: #fff;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }

        .day-title {
            font-weight: 500;
            border-bottom: 1px solid #e9ecef;
            padding-bottom: 6px;
            margin-bottom: 6px;
            color: #1a73e8;
        }

        .paragraph-title {
            color: #1a73e8;
            margin-bottom: 12px;
            font-style: italic;
            font-size: 13px;
            opacity: 0.9;
        }

        .subject-line {
            display: flex;
            align-items: center;
            margin-bottom: 6px;
            font-size: 11px;
            cursor: move;
            padding: 3px;
            border-radius: 4px;
            transition: background-color 0.2s;
        }

        .subject-line:hover {
            background-color: #f8f9fa;
        }

        .subject-line.dragging {
            opacity: 0.5;
            background-color: #e9ecef;
        }

        .subject-dot {
            width: 5px;
            height: 5px;
            background: #1a73e8;
            border-radius: 50%;
            margin-right: 10px;
            margin-top: -2px;
        }

        .subject-text {
            flex: 1;
            border-bottom: 1px dotted #dadce0;
            padding-bottom: 2px;
            min-height: 14px;
            color: #1a1a1a;
            font-weight: normal;
        }

        .notes-box {
            border: 1px solid #dadce0;
            border-radius: 8px;
            padding: 15px;
            height: 175px;
            background: #fff;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }

        .notes-title {
            text-align: center;
            font-style: italic;
            color: #1a73e8;
            font-weight: 500;
            border-bottom: 1px solid #e9ecef;
            padding-bottom: 8px;
            margin-bottom: 15px;
        }

        .notes-content {
            min-height: 80px;
        }

        .day-box.drag-over {
            background-color: #f8f9fa;
            border: 2px dashed #1a73e8;
        }

        @media print {
            body {
                padding: 0;
            }
            
            .no-print {
                display: none !important;
            }

            .week-grid {
                page-break-inside: avoid;
            }

            .day-box, .notes-box {
                box-shadow: none;
                border: 1px solid #000;
                height: 240px !important;
            }

            .subject-line {
                font-size: 10px !important;
                margin-bottom: 4px !important;
                padding: 2px !important;
            }

            .subject-text {
                min-height: 12px !important;
                padding-bottom: 1px !important;
                color: #000 !important;
                font-weight: normal !important;
            }

            .day-title, .notes-title, .paragraph-title {
                color: #000 !important;
            }

            .day-title {
                padding-bottom: 4px !important;
                margin-bottom: 8px !important;
            }

            .subject-dot {
                margin-right: 0 !important;
            }

            .subject-dot {
                background: #000;
            }

            .title {
                color: #000 !important;
            }

            /* PDF'de logo alanı için özel stiller */
            .logo-area {
                margin-bottom: 20px !important;
            }

            .logo-placeholder {
                background: #000 !important;
                color: #fff !important;
                border: 1px solid #000 !important;
                font-size: 12px !important;
            }

            /* PDF'de notlar alanı için özel stiller */
            .day-box[data-day="Notlar"] .notes-area {
                border: none !important;
                padding: 0 !important;
                margin-top: 0 !important;
                box-shadow: none !important;
            }

            .day-box[data-day="Notlar"] .notes-area textarea {
                border: none !important;
                padding: 0 !important;
                margin: 0 !important;
                background: transparent !important;
                font-size: 11px !important;
                line-height: 1.3 !important;
            }
        }

        .print-button {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 10px 20px;
            background: #1a73e8;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-family: inherit;
            font-size: 14px;
            transition: background-color 0.2s;
        }

        .print-button:hover {
            background: #1557b0;
        }

        .save-button {
            position: fixed;
            top: 20px;
            right: 140px;
            padding: 10px 20px;
            background: #34a853;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-family: inherit;
            font-size: 14px;
            transition: background-color 0.2s;
        }

        .save-button:hover {
            background: #2d9249;
        }
    </style>
</head>
<body>
    <div style="display: flex; justify-content: center; margin-bottom: 10px;">
        <button onclick="window.print()" class="print-button no-print">Yazdır</button>
    </div>
    <div class="header">
        <div class="title">Haftalık Plan Çizelgesi</div>
        <div class="logo-area">
            <img src="/images/logo.png" alt="Logo" class="custom-logo">
        </div>
        <div class="date">Tarih: <span class="date-line"><%= new Date().toLocaleDateString('tr-TR') %></span></div>
    </div>

    <div class="week-grid">
        <% global.sections.forEach(day => { %>
            <div class="day-box" data-day="<%= day %>" ondrop="drop(event)" ondragover="allowDrop(event)" ondragleave="dragLeave(event)">
                <div class="day-title"><%= day %></div>
                
                <% if (day === 'Notlar') { %>
                    <!-- Notlar günü için özel içerik -->
                    <div class="notes-area">
                        <textarea onchange="saveNotes(this.value, '<%= day %>')"></textarea>
                    </div>
                <% } else { %>
                    <!-- Diğer günler için normal ders satırları -->
                    <% 
                    const daySchedule = student.weeklySchedule.find(schedule => schedule.day === day);
                    const subjects = daySchedule ? daySchedule.subjects : [];
                    %>
                    <% if (subjects && subjects.length > 0) { %>
                        <% subjects.forEach((subject, index) => { %>
                            <div class="subject-line" 
                                 draggable="true" 
                                 ondragstart="drag(event)" 
                                 data-subject="<%= subject.subject %>"
                                 data-notes="<%= subject.notes || '' %>"
                                 data-day="<%= day %>"
                                 data-index="<%= index %>">
                                <div class="subject-dot"></div>
                                <div class="subject-text"><strong><%= subject.subject %></strong><% if (subject.notes) { %> - <span><%= subject.notes %></span><% } %></div>
                            </div>
                        <% }) %>
                        <% 
                        // Ders sayısından sonra kalan boş satırları ekle
                        const remainingEmptyLines = 5 - subjects.length;
                        for(let i = 0; i < remainingEmptyLines; i++) { 
                        %>
                            <div class="subject-line">
                                <div class="subject-dot"></div>
                                <div class="subject-text"></div>
                            </div>
                        <% } %>
                    <% } else { %>
                        <div class="subject-line">
                            <div class="subject-dot"></div>
                            <div class="subject-text"></div>
                        </div>
                        <div class="subject-line">
                            <div class="subject-dot"></div>
                            <div class="subject-text"></div>
                        </div>
                        <div class="subject-line">
                            <div class="subject-dot"></div>
                            <div class="subject-text"></div>
                        </div>
                        <div class="subject-line">
                            <div class="subject-dot"></div>
                            <div class="subject-text"></div>
                        </div>
                        <div class="subject-line">
                            <div class="subject-dot"></div>
                            <div class="subject-text"></div>
                        </div>
                    <% } %>
                <% } %>
            </div>
        <% }) %>
    </div>

    <script>
        let draggedItem = null;

        function drag(event) {
            draggedItem = event.target;
            event.target.classList.add('dragging');
            event.dataTransfer.setData('text/plain', '');
        }

        function allowDrop(event) {
            event.preventDefault();
            event.currentTarget.classList.add('drag-over');
        }

        function dragLeave(event) {
            event.currentTarget.classList.remove('drag-over');
        }

        function drop(event) {
            event.preventDefault();
            const targetDay = event.currentTarget;
            targetDay.classList.remove('drag-over');

            if (draggedItem && targetDay !== draggedItem.parentElement) {
                const subject = draggedItem.dataset.subject;
                const notes = draggedItem.dataset.notes;
                const newDay = targetDay.dataset.day;
                const sourceDay = draggedItem.parentElement;

                // Eski konumdan kaldır
                sourceDay.removeChild(draggedItem);

                // Yeni konuma ekle
                const newSubjectLine = document.createElement('div');
                newSubjectLine.className = 'subject-line';
                newSubjectLine.draggable = true;
                newSubjectLine.ondragstart = drag;
                newSubjectLine.dataset.subject = subject;
                newSubjectLine.dataset.notes = notes;
                newSubjectLine.dataset.day = newDay;

                newSubjectLine.innerHTML = `
                    <div class="subject-dot"></div>
                    <div class="subject-text">${subject}${notes ? ' - ' + notes : ''}</div>
                `;

                // Yeni dersi ekle
                targetDay.appendChild(newSubjectLine);
                
                // HEDEF GÜN: Her zaman 5 satır olmasını sağla (dolu + boş)
                const targetFilledLines = targetDay.querySelectorAll('.subject-line[data-subject]');
                
                // Önce tüm boş satırları kaldır
                targetDay.querySelectorAll('.subject-line:not([data-subject])').forEach(line => line.remove());
                
                // Sonra gerekli sayıda boş satır ekle
                const targetNeededEmptyLines = 5 - targetFilledLines.length;
                for (let i = 0; i < targetNeededEmptyLines; i++) {
                    const emptyLine = document.createElement('div');
                    emptyLine.className = 'subject-line';
                    emptyLine.innerHTML = `
                        <div class="subject-dot"></div>
                        <div class="subject-text"></div>
                    `;
                    targetDay.appendChild(emptyLine);
                }

                // KAYNAK GÜN: Her zaman 5 satır olmasını sağla (dolu + boş)
                const sourceFilledLines = sourceDay.querySelectorAll('.subject-line[data-subject]');
                
                // Önce tüm boş satırları kaldır
                sourceDay.querySelectorAll('.subject-line:not([data-subject])').forEach(line => line.remove());
                
                // Sonra gerekli sayıda boş satır ekle
                const sourceNeededEmptyLines = 5 - sourceFilledLines.length;
                for (let i = 0; i < sourceNeededEmptyLines; i++) {
                    const emptyLine = document.createElement('div');
                    emptyLine.className = 'subject-line';
                    emptyLine.innerHTML = `
                        <div class="subject-dot"></div>
                        <div class="subject-text"></div>
                    `;
                    sourceDay.appendChild(emptyLine);
                }
            }

            draggedItem.classList.remove('dragging');
            draggedItem = null;
            
            // Değişiklikleri kaydet
            saveSchedule();
        }

        function saveNotes(notesText, day) {
            // Notlar günü için özel kaydetme
            if (day === 'Notlar') {
                console.log('Notlar kaydedildi:', notesText);
                // Burada notları localStorage'a veya sunucuya kaydedebilirsiniz
                localStorage.setItem('weeklyNotes', notesText);
            }
        }

        function saveSchedule() {
            const schedule = {};
            const dayBoxes = document.querySelectorAll('.day-box');
            
            dayBoxes.forEach(dayBox => {
                const day = dayBox.dataset.day;
                const subjects = [];
                
                dayBox.querySelectorAll('.subject-line[data-subject]').forEach(subjectLine => {
                    subjects.push({
                        subject: subjectLine.dataset.subject,
                        notes: subjectLine.dataset.notes
                    });
                });
                
                schedule[day] = subjects;
            });

            // Sunucuya gönder
            fetch(`/students/<%= student.id %>/schedule`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ subjects: Object.values(schedule).flat() })
            })
            .then(response => {
                if (!response.ok) {
                    console.error('Program kaydedilirken bir hata oluştu');
                }
            })
            .catch(error => {
                console.error('Hata:', error);
            });
        }
    </script>
</body>
</html> 
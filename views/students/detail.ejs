<%- contentFor('body') %>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div class="d-flex align-items-center">
        <a href="/students" class="btn btn-outline-secondary me-3">
            <i class="bi bi-arrow-left me-2"></i>
            Geri Dön
        </a>
        <h2 class="mb-0">
            <i class="bi bi-person me-2"></i>
            Öğrenci Detayı
        </h2>
    </div>
    <div>
        <a href="/print-template/<%= student.id %>" target="_blank" class="btn btn-primary">
            Plan Görüntüle
        </a>
    </div>
</div>

<!-- Öğrenci Bilgileri -->
<div class="card mb-4">
    <div class="card-body">
        <div class="d-flex align-items-center">
            <div class="profile-icon">
                <i class="bi bi-person"></i>
            </div>
            <div>
                <h3 class="card-title mb-1"><%= student.name %></h3>
                <p class="text-muted mb-0"><%= student.email %> | <%= student.grade %>. Sınıf</p>
            </div>
        </div>
    </div>
</div>

<!-- Ders Ekleme Formu -->
<div class="card mb-4">
    <div class="card-header">
        <h4 class="mb-0">
            <i class="bi bi-plus-circle me-2"></i>
            Ders Ekle
        </h4>
    </div>
    <div class="card-body">
        <form id="addSubjectForm" class="row g-3">
            <div class="col-md-5">
                <label class="form-label">Ders</label>
                <select class="form-select" id="subjectSelect" required>
                    <option value="">Ders Seçin</option>
                    <option value="Matematik">Matematik</option>
                    <option value="Fizik">Fizik</option>
                    <option value="Kimya">Kimya</option>
                    <option value="Biyoloji">Biyoloji</option>
                    <option value="Türkçe">Türkçe</option>
                    <option value="Geometri">Geometri</option>
                    <option value="Tarih">Tarih</option>
                    <option value="Coğrafya">Coğrafya</option>
                </select>
            </div>
            <div class="col-md-5">
                <label class="form-label">Konu</label>
                <select class="form-select" id="topicSelect" required>
                    <option value="">Önce Ders Seçin</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="bi bi-plus-lg me-2"></i>
                    Ekle
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Haftalık Plan -->
<div class="card">
    <div class="card-header">
        <h4 class="mb-0">
            <i class="bi bi-calendar-week me-2"></i>
            Haftalık Plan
        </h4>
    </div>
    <div class="card-body">
        <div id="subjectsContainer" class="mb-4">
            <% if (student.weeklySchedule && student.weeklySchedule[0] && student.weeklySchedule[0].subjects) { %>
                <% student.weeklySchedule[0].subjects.forEach((subject, subjectIndex) => { %>
                    <div class="subject-row d-flex align-items-center gap-3 mb-3">
                        <div class="flex-grow-1">
                            <input type="text" 
                                   name="subjects[<%= subjectIndex %>][subject]" 
                                   value="<%= subject.subject %>"
                                   class="form-control"
                                   placeholder="Ders adı"
                                   onchange="autoSave()">
                        </div>
                        <div class="flex-grow-1">
                            <input type="text" 
                                   name="subjects[<%= subjectIndex %>][notes]" 
                                   value="<%= subject.notes %>"
                                   class="form-control"
                                   placeholder="Notlar"
                                   onchange="autoSave()">
                        </div>
                        <button type="button" 
                                onclick="removeSubject(this)"
                                class="btn btn-outline-danger">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                <% }) %>
            <% } %>
        </div>
    </div>
</div>

<script>
// Ders-Konu eşleştirmeleri
const subjectTopics = {
    'Matematik': [
        'Temel Kavramlar',
        'Sayılar',
        'Rasyonel Sayılar',
        'Mutlak Değer',
        'Üslü Sayılar',
        'Köklü Sayılar',
        'Çarpanlara Ayırma',
        'Oran-Orantı',
        'Denklemler',
        'Eşitsizlikler',
        'Fonksiyonlar',
        'Polinomlar',
        'İkinci Dereceden Denklemler',
        'Karmaşık Sayılar',
        'Logaritma',
        'Diziler',
        'Seriler',
        'Limit',
        'Türev',
        'İntegral'
    ],
    'Fizik': [
        'Fizik Bilimine Giriş',
        'Madde ve Özellikleri',
        'Hareket ve Kuvvet',
        'Enerji',
        'Isı ve Sıcaklık',
        'Elektrik ve Manyetizma',
        'Basınç',
        'Dalgalar',
        'Optik',
        'Atom Fiziği'
    ],
    'Kimya': [
        'Kimya Bilimi',
        'Atom ve Periyodik Sistem',
        'Kimyasal Türler Arası Etkileşimler',
        'Maddenin Halleri',
        'Karışımlar',
        'Asitler, Bazlar ve Tuzlar',
        'Kimya Her Yerde',
        'Kimyanın Temel Kanunları',
        'Mol Kavramı',
        'Kimyasal Tepkimeler'
    ],
    'Biyoloji': [
        'Biyoloji Bilimi',
        'Canlıların Yapısı',
        'Hücre',
        'Canlıların Çeşitliliği',
        'Üreme',
        'Kalıtım',
        'Ekosistem',
        'Güncel Çevre Sorunları',
        'Canlılar ve Enerji',
        'İnsan Fizyolojisi'
    ],
    'Türkçe': [
        'Sözcükte Anlam',
        'Cümlede Anlam',
        'Paragrafta Anlam',
        'Anlatım Teknikleri',
        'Düşünceyi Geliştirme Yolları',
        'Sözcük Türleri',
        'Fiilimsiler',
        'Cümlenin Ögeleri',
        'Cümle Türleri',
        'Anlatım Bozuklukları',
        'Ses Bilgisi',
        'Yazım Kuralları',
        'Noktalama İşaretleri'
    ],
    'Geometri': [
        'Temel Kavramlar',
        'Doğruda Açılar',
        'Üçgende Açılar',
        'Üçgende Açı-Kenar Bağıntıları',
        'Üçgende Alan',
        'Üçgende Benzerlik',
        'Dik Üçgen',
        'İkizkenar Üçgen',
        'Eşkenar Üçgen',
        'Dörtgenler',
        'Çokgenler',
        'Çemberde Açılar',
        'Çemberde Uzunluk',
        'Dairede Alan',
        'Katı Cisimler'
    ],
    'Tarih': [
        'Tarih Bilimi',
        'İlk Uygarlıklar',
        'İlk Türk Devletleri',
        'İslam Tarihi ve Uygarlığı',
        'Türk-İslam Devletleri',
        'Osmanlı Devleti Kuruluş Dönemi',
        'Osmanlı Devleti Yükselme Dönemi',
        'Osmanlı Devleti Duraklama Dönemi',
        'Osmanlı Devleti Gerileme Dönemi',
        'Osmanlı Devleti Dağılma Dönemi',
        'Kurtuluş Savaşı',
        'Atatürk Dönemi',
        'Çağdaş Türk ve Dünya Tarihi'
    ],
    'Coğrafya': [
        'Doğa ve İnsan',
        'Dünya\'nın Şekli ve Hareketleri',
        'Coğrafi Konum',
        'Harita Bilgisi',
        'İklim Bilgisi',
        'Yerşekilleri',
        'Nüfus ve Yerleşme',
        'Türkiye\'nin Fiziki Özellikleri',
        'Türkiye\'nin İklimi',
        'Türkiye\'nin Nüfusu',
        'Türkiye\'nin Ekonomik Coğrafyası',
        'Bölgeler ve Ülkeler',
        'Çevre ve Toplum'
    ]
};

// Ders seçildiğinde konuları güncelle
document.getElementById('subjectSelect').addEventListener('change', function() {
    const topicSelect = document.getElementById('topicSelect');
    const selectedSubject = this.value;
    
    topicSelect.innerHTML = '<option value="">Konu Seçin</option>';
    
    if (selectedSubject && subjectTopics[selectedSubject]) {
        subjectTopics[selectedSubject].forEach(topic => {
            const option = document.createElement('option');
            option.value = topic;
            option.textContent = topic;
            topicSelect.appendChild(option);
        });
    }
});

// Yeni ders ekleme
document.getElementById('addSubjectForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const subject = document.getElementById('subjectSelect').value;
    const topic = document.getElementById('topicSelect').value;
    
    if (!subject || !topic) return;
    
    const container = document.getElementById('subjectsContainer');
    const subjectCount = container.children.length;
    
    const subjectRow = document.createElement('div');
    subjectRow.className = 'subject-row d-flex align-items-center gap-3 mb-3';
    subjectRow.innerHTML = `
        <div class="flex-grow-1">
            <input type="text" 
                   name="subjects[${subjectCount}][subject]" 
                   value="${subject}"
                   class="form-control"
                   placeholder="Ders adı"
                   onchange="autoSave()">
        </div>
        <div class="flex-grow-1">
            <input type="text" 
                   name="subjects[${subjectCount}][notes]" 
                   value="${topic}"
                   class="form-control"
                   placeholder="Notlar"
                   onchange="autoSave()">
        </div>
        <button type="button" 
                onclick="removeSubject(this)"
                class="btn btn-outline-danger">
            <i class="bi bi-trash"></i>
        </button>
    `;
    
    container.appendChild(subjectRow);
    
    // Formu sıfırla
    this.reset();
    document.getElementById('topicSelect').innerHTML = '<option value="">Önce Ders Seçin</option>';

    // Otomatik kaydet
    await autoSave();
});

// Ders silme
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('remove-subject') || e.target.closest('.remove-subject')) {
        const button = e.target.classList.contains('remove-subject') ? e.target : e.target.closest('.remove-subject');
        button.closest('.subject-entry').remove();
    }
});

function removeSubject(button) {
    const row = button.closest('.subject-row');
    row.remove();
    
    // Kalan derslerin indekslerini güncelle
    const container = document.getElementById('subjectsContainer');
    const rows = container.getElementsByClassName('subject-row');
    Array.from(rows).forEach((row, index) => {
        const inputs = row.getElementsByTagName('input');
        inputs[0].name = `subjects[${index}][subject]`;
        inputs[1].name = `subjects[${index}][notes]`;
    });

    // Otomatik kaydet
    autoSave();
}

async function autoSave() {
    const container = document.getElementById('subjectsContainer');
    const rows = container.getElementsByClassName('subject-row');
    const subjects = [];

    Array.from(rows).forEach(row => {
        const inputs = row.getElementsByTagName('input');
        const subject = inputs[0].value.trim();
        const notes = inputs[1].value.trim();
        
        if (subject) {
            subjects.push({ subject, notes });
        }
    });

    try {
        const response = await fetch(`/students/<%= student.id %>/schedule`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ subjects })
        });
        
        if (!response.ok) {
            console.error('Program kaydedilirken bir hata oluştu');
        }
    } catch (error) {
        console.error('Hata:', error);
    }
}
</script> 